name: reusable workflow with python execution with artifacts in test branch
on:
  workflow_call:

jobs:
  called_repo_job:
    name: get the python script file in called repo 
    runs-on: ubuntu-latest
    steps:
      - name: checkout called repo
        id: step0
        uses: actions/checkout@v3
        with:
         repository: anandu-m-s/reusableWorkflow
         path: called-workflow-repo
        #  ref: reusable-branch-v1
         ref: main
      - name: get python file
        id: step1
        run: |
         echo "$(cat called-workflow-repo/call_zip.py)" > testDemo.py
      - name: save artifact
        id: step2
        uses: actions/upload-artifact@v2
        with:
         name: python-artifact-new
         path: |
           testDemo.py
      # - name: access the secrets stored
      #   id: secret
      #   run: |
      #    echo "The secret in reusable repo is ${{ secrets.AUTH_TOKEN }}"     


  caller_repo_job:
    runs-on: ubuntu-latest
    needs: called_repo_job
    steps:    
      - name: checkout action
        id: step3
        uses: actions/checkout@v3
      - name: Set up Python
        id: step4
        uses: actions/setup-python@v3
        with:
          python-version: 3.8
      - name: Install dependencies
        id: step5
        run: |
         pip install requests
         pip install shutils  
      - name: file read
        id: step6
        run: |
          file_path=$(find . -name '*.json' -type f -print -quit)
          cat $file_path
          echo "jsonFilePath=$file_path" >> GITHUB_ENV
      - name: check if condition
        id: step99
        run: |
          echo "${{ github.ref }}"
          if[ ${{ github.ref }} == refs/heads/main ]
          then
           echo "true"
          else
           echo "false"
      - name: check json access
        id: step7
        run:
         cat $file_path      
      - name: download artifact
        id: step8
        uses: actions/download-artifact@v2
        with:
         name: python-artifact-new    
      - name: print python scripts
        id: step
        run: |
         cat testDemo.py 
      # - name: access the secrets stored
      #   id: secret
      #   run: |
      #    echo "The secret in reusable repo is ${{ secrets.API_KEY }}"     
      # - name: call python script for json
      #   id: step9
      #   run: |
      #    file_path=$(find . -name '*.json' -type f -print -quit)
      #    python testDemo.py $file_path
      # - name: call file stored in temporary location
      #   id: step10
      #   run: |
      #    cat test.json
      - name: call python script for zip
        id: step11
        run: |
         python testDemo.py
      #   env:
      #    TOKEN: ${{secrets.AUTH_TOKEN}} 
      # - name: upload zip as artifact
      #   id: upload-zip 
      #   uses: actions/upload-artifact@v2
      #   with:
      #    name:  upload-zip
      #    path: ${{ steps.step11.outputs.zipFilePath }}
      - name: List downloaded files
        run: |
          # List the contents of the temporary location
          ls -l tmp
          cat tmp/pkp.zip
      - name: check if zip file generated
        id: check-zip
        run: |
           
           if[ ${{ steps.step11.outputs.zip_file_path }} ]
           then
            echo "Zip file generated, proceeding with artifact upload"
            exit 1
           else
            echo "Zip file not generated, exiting without artifact upload"
            exit 0
           fi    
      - name: upload zip to artifact
        if: ${{ success() }}
        id: upload_zip
        uses: actions/upload-artifact@v2
        with:
          name: upload-zip
          path: ${{ steps.step11.outputs.zip_file_path }}   
      # - name: unzip
      #   id: unzip
      #   run: |
      #    unzip tmp/pkp.zip -d extracted_file

      # - name: push zip file to Nexus repository
      #   uses: sonatype-nexus-community/nexus-repo-github-action@master
      #   with:
      #    serverUrl: http://localhost:8081/repository/zipStorage/
      #    username: admin
      #    password: Anandu@098
      #    repository: zipStorage
      #    format: raw
      #    coordinates: groupId=com.example artifactId=app version=1.0.0
      #    assets: extension=zip
      #    filename: pkp.zip
                      